1. システム概要
本システムは、チームメンバー（10名）の出勤管理・スケジュール管理を主目的とするWebアプリケーションです。
「個人用カレンダー」と「チーム全体カレンダー」を切り替えて利用でき、以下の機能を提供します。

出勤・勤怠管理（テレワーク / 出勤などの形態）
タスク管理・プロジェクト管理
Google Sheets API からのスプレッドシートインポート
Google カレンダーへのエクスポート
Next.js をベースとし、Vercel にホスティングすることでフロントエンドとサーバーレスAPIを統合的に運用します。
データベースは Neon (PostgreSQL) を想定し、認証には NextAuth.js + Google OAuth を利用する構成です。

2. ユーザー・権限
管理者（1名：依頼者本人）

スプレッドシートのインポート操作（手動ボタン）
メンバー管理（追加・編集など）
プロジェクトの追加・管理
チームメンバー（10名）

カレンダーの予定や勤怠を登録・閲覧
タスクやプロジェクトを閲覧・登録・編集
連携ボタンから自分のスケジュールを Google カレンダーにエクスポート
権限種別

将来的なサブ管理者の追加は想定しない
「管理者 (admin)」と「一般メンバー (member)」の2種類
3. 優先実装機能
カレンダー機能
個人用／全体用カレンダーの切り替え、予定・勤怠・タスク管理など。

スプレッドシート（Google Sheets）からのインポート

毎日0時の自動取得（Vercel の Cron Jobs などを想定）
管理者が手動で実行できるインポートボタン
Google カレンダーへのエクスポート（連携）

個人のスケジュールをエクスポート
手動で再度エクスポート（同期）可能
管理画面
管理者のみアクセスできる画面。インポート、メンバー管理、プロジェクト管理など。

4. 機能要件
4.1 カレンダー
4.1.1 概要
**「個人用カレンダー」と「全体用カレンダー」**を切り替えて表示
個人用：ログインユーザー本人の予定・勤怠・タスクのみ
全体用：チーム全員の予定・勤怠・タスク
4.1.2 表示内容
日付ごとに以下を表示
出勤予定（インポート or ユーザー入力）
勤怠情報（実績）
タスク
日付をクリック or ホバーすると詳細（モーダルやツールチップ）を表示
4.1.3 入力フォーム
Google カレンダーのように日付セルをクリックするとモーダルが開き、以下を入力可能
予定名
日時（開始・終了）
出勤形態（テレワーク / 出勤など）
勤怠打刻（出勤 / 退勤 / 休憩入り / 休憩終わり）
タスク情報（紐づくプロジェクト・タグなど）
休憩は複数回に対応するデータ管理が必要
4.2 タスク管理
4.2.1 概要
タスクは「タスク管理画面」または「カレンダー上の入力フォーム」から作成
登録項目例
タスク名
担当者（ユーザー）
紐づくプロジェクト（任意）
タグ
目標日付（期限）
詳細説明
4.2.2 完了タスク
ステータスが完了になったタスクはプロジェクト詳細画面などで確認可能
4.3 プロジェクト管理
4.3.1 概要
プロジェクトはタスクの「親」概念
プロジェクト管理画面にて
プロジェクトの新規作成（名前、タグ、詳細）
参加メンバーの指定（複数ユーザーを紐づけ）
プロジェクト検索（名前、タグなど）
4.3.2 将来拡張
プロジェクト単位で週報ページを作成予定
4.4 勤怠管理
4.4.1 概要
出勤予定（事前申告）と実績（出勤/退勤/休憩）を管理
ユーザーが手動で時間を入力
複数回の休憩にも対応
4.4.2 カレンダーとの連携
勤怠情報をカレンダーに表示
ユーザー自身で編集可能
4.5 連携機能（Google カレンダーエクスポート）
4.5.1 概要
ログイン中のユーザーが「連携ボタン」を押すと、自分の Google カレンダーにチーム用のカレンダーを新規作成し、直近20日分の予定をエクスポート
変更があった場合は、再度ボタンを押して同期を行う
逆方向（Google → 本アプリへの取り込み）は不要
4.6 管理画面
4.6.1 概要
管理者のみアクセス可能
スプレッドシートのインポート
毎日0時の自動取得
手動実行ボタン
全メンバー分の予定データを取得し反映
メンバー管理（追加・編集、権限変更など）
プロジェクト管理
5. 画面構成・UI/UX
5.1 カレンダー画面
個人用 / 全体用のタブ切り替え
カレンダーの日付クリック → モーダル表示 → 「予定追加 / 勤怠打刻 / タスク入力」など
UIには Tailwind CSS などを利用し、Vercel へのデプロイとの親和性を高める
5.2 タスク管理画面
タスク一覧（ステータスごとにフィルタ可能）
タスク追加フォーム（タスク名、担当者、プロジェクト選択、タグ、詳細など）
5.3 プロジェクト管理画面
プロジェクト一覧（タグや名前で検索可能）
プロジェクト作成フォーム（名前、タグ、詳細）
参加メンバーの設定（複数ユーザーをプロジェクトに紐づけ）
5.4 管理画面（Admin）
管理者のみアクセス可能
スプレッドシートのインポート（手動ボタン + Cronによる自動取得）
メンバー管理（role 変更など）
プロジェクト管理
5.5 連携画面（Google カレンダーエクスポート）
個人設定やカレンダー画面に「連携ボタン」
クリックで Google カレンダーに予定をエクスポート
6. 非機能要件
認証

NextAuth.js + Google OAuth を利用
Google アカウントを用いた認証フロー
ホスティング

フロントエンド/バックエンドを含めた Next.js アプリを Vercel でホスティング
DB

Neon (PostgreSQL) を想定（詳細なテーブル設計は後日検討）
パフォーマンス

チーム10名規模で十分な動作を想定
セキュリティ

Google sub / email などでユーザーを判定し、権限管理を行う
拡張性

週報や通知機能など、追加しやすい構成を目指す
7. 今後の拡張予定
週報管理機能
プロジェクト単位で週報ページを追加し、タスク・勤怠情報を集約

レスポンシブ対応
スマートフォン・タブレット対応（優先度は低め、必要に応じて段階的に実装）

通知機能
タスク期限通知や勤怠打刻漏れアラートなど